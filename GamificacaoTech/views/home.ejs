<div class="header-wrapper">
    <div class="header">
        <div class="header-left">

            <button class="header-button" id="hamburger" type="button" onclick="showSidebar()">
                <i class="material-icons header-icon header-menu">menu</i>
            </button>
            <div class="profile-wrapper">
            
            </div>
            <canvas height="200" width="200" id="counter"></canvas>
            <nav class="header-nav">
            </nav>
        </div>

        <div class="header-right">
            <img src="../Public/images/logo_branco.png" class="id-tech-logo">
            <img src="../Public/images/sigla_branco.png" class="id-logo">
        </div>
    </div>
</div>

<!--SIDEBAR-->
<div class="sidebar-wrapper" id="sidebar">
    <div class="sidebar">
        <button onclick="closeOverlay()" data-micromodal-trigger="modal-1" class="nav-button">Registro</button>
        <button onclick="closeOverlay()" class="nav-button">Portfólio</button>
        <button onclick="closeOverlay()" class="nav-button">Currículo</button>
        <button onclick="closeOverlay()" class="nav-button">Loja</button>
    </div>
</div>

<!--CONTENT-->

<div class="content-wrapper dragscroll" id="content-wrapper">
    <div class="room-container">
        <div id="item-store-area" class="item-store-area-wrapper"></div>
        <img src="../Public/images/background-floor.svg" class="room">
        <button class="room-box" onclick="editMode()"></button>
        <div class="grid-container">
            <div class="furniture">
                <img src="../Public/images/desk.png" class="desk"></img>
                <button data-micromodal-trigger="modal-1" class="furniture-button ignore-dragscroll pc" onclick=""></button>
                <button class="furniture-button ignore-dragscroll estante" data-micromodal-trigger="modal-3" onclick="">
                        <%-achievePreviewHTML%>
                </button>
                <button class="furniture-button ignore-dragscroll shelf" data-micromodal-trigger="modal-2">
                    <div class="books-wrapper">
                        <% for(let i = 0; i < books.length; i++){ %>
                            <%-books[i]%>
                        <%}%>
                    </div>
                </button>
                <button class="furniture-button ignore-dragscroll board" onclick=""></button>
            </div>
            <%-placedItems%>
        </div>
    </div>
</div>

<!--MODALS-->
<div class="modal-storage">        
    <div id="sidebar-overlay" onclick="closeOverlay()"></div>

    <div id="item-box-gui" class="item-box-wrapper">
        <div class="item-box-button-container">
            <button id="item-box-close" class="item-box-button" onclick="endEditMode()"><i class="material-icons">close</i></button>
            <button id="item-box-edit" class="item-box-button" onclick="startEditMode()"><i class="material-icons">widgets</i></button>
        </div>
        <div class="item-box">
            <%- notPlacedItems %>
        </div>
    </div>

    <div class="modal micromodal-slide" id="modal-1" aria-hidden="true">
        <div class="modal__overlay" tabindex="-1" data-micromodal-close>
            <div class="modal__container os-container" role="dialog" aria-modal="true" aria-labelledby="modal-1-title">
                <header class="modal__header os-taskbar">
                    <h2 class="modal__title" id="modal-1-title">
                    IDTech OS
                    </h2>
                    <button class="modal__close" aria-label="Close modal" data-micromodal-close></button>
                </header>
                <main class="modal__content os-desktop-wrapping" id="modal-1-content">
                    <div class="os-desktop">
                        <div class="icon-column">
                            <button onclick="loadContent('/registroProjeto')" class="desktop-icon">
                                <i class="material-icons">note_add</i>
                                <span>Registro</span>
                            </button>
                            <button onclick="loadContent('/portifolio')" class="desktop-icon">
                                <i class="material-icons">book</i>
                                <span>Portfólio</span>
                            </button>
                            <button onclick="loadContent('/curriculo')" class="desktop-icon">
                                <i class="material-icons">assignment_ind</i>
                                <span>Currículo</span>
                            </button>
                            <button onclick="loadContent('/')" class="desktop-icon">
                                <i class="material-icons">info</i>
                                <span>Informações<br>da Faculdade</span>
                            </button>
                            <button onclick="loadContent('/loja')" class="desktop-icon">
                                <i class="material-icons">shopping_basket</i>
                                <span>E-Commerce</span>
                            </button>
                        </div>
                        <div class="os-window-container">
                            <div class="os-frame os-window">
                                <div id="os-content"></div>
                            </div>
                            
                            <button class="os-window-close"></button>
                        </div>
                    </div>
                </main>
            </div>
        </div>
    </div>

    <div class="modal micromodal-slide" id="modal-2" aria-hidden="true">
        <div class="modal__overlay" tabindex="-1" data-micromodal-close>
            <div class="modal__container shelf-gui-wrapper" role="dialog" aria-modal="true" aria-labelledby="modal-2-title">
                <header class="modal__header shelf-header">
                    <button class="modal__close" aria-label="Close modal" data-micromodal-close></button>
                </header>
                <main class="modal__content shelf-body-wrapper dragscroll" id="modal-2-content">
                    <div class="shelf-body">
                        <div class="books-wrapper books-wrapper-gui">
                            <% for(let i = 0; i < books.length; i++){ %>
                                <%-books[i]%>
                            <%}%>
                        </div>
                    </div>
                </main>
            </div>
        </div>
    </div>

    <div class="modal micromodal-slide" id="modal-3" aria-hidden="true">
        <div class="modal__overlay" tabindex="-1" data-micromodal-close>
            <div class="modal__container estante-gui-wrapper" role="dialog" aria-modal="true" aria-labelledby="modal-3-title">
                <header class="modal__header estante-header">
                    <button class="modal__close" aria-label="Close modal" data-micromodal-close></button>
                </header>
                <main class="modal__content estante-body-wrapper dragscroll" id="modal-3-content">
                    <div class="estante-body">
                        <%-achieveHTML%>
                    </div>
                </main>
            </div>
        </div>
    </div>
</div> 

<script type="application/javascript">
    var counter = document.getElementById('counter').getContext('2d');
    var no = 0; // Starting Point
    var pointToFill = 4.72;  //Point from where you want to fill the circle
    var cw = counter.canvas.width;  //Return canvas width
    var ch = counter.canvas.height; //Return canvas height
    var diff;   // find the different between current value (no) and trageted value (100)
    var loadingContent = false;

    function loadContent(url) {
        if (loadingContent)
            return;
        
        loadingContent = true;
        $.ajax({
            method: 'POST',
            cache: false,
            url: url,
            success: function (data) {
                loadingContent = false;
                $('#os-content').html(data);
            },
            error: function () {
                loadingContent = false;
                $('#os-content').html("<b>Ocorreu um erro ao carregar os dados do servidor :(</b>");
            }
        })
    }

    function fillCounter(){
        diff = ((no/100) * Math.PI*2*10);
        counter.clearRect(0,0,cw,ch);   // Clear canvas every time when function is call
        counter.lineWidth = 15;     // size of stroke
        counter.fillStyle = '#fff';     // color that you want to fill in counter/circle
        counter.strokeStyle = '#dc143c';    // Stroke Color
        counter.textAlign = 'center';
        counter.font = "0.1px monospace";    //set font size and face
        counter.fillText(no+'%',100,110);       //fillText(text,x,y);
        counter.beginPath();
        counter.arc(100,100,90,pointToFill,diff/10+pointToFill);    //arc(x,y,radius,start,stop)
        counter.stroke();   // to fill stroke
        
        // now add condition
        
        if(no >= 78){
            clearTimeout(fill);     //fill is a variable that call the function fillcounter()
        }
        no++;
    }
    
    //now call the function
    
    var fill = setInterval(fillCounter,50);     //call the fillCounter function after every 50MS

    (function () {
        var i, item, items = $(".room-object");
        for (i = items.length - 1; i >= 0; i--) {
            item = items[i];
            item.cellX = (parseInt(item.style.left) / 80) | 0;
            item.cellY = (parseInt(item.style.top) / 80) | 0;
            item.cellW = (parseInt(item.style.width) / 80) | 0;
            item.cellH = (parseInt(item.style.height) / 80) | 0;
        }
    })();
    function getScrollBarWidth () {
        console.log(window.innerWidth);
        console.log($('.room').width());
        if( $('.room').width() > window.innerWidth ){
            var $outer = $('<div>').css({visibility: 'hidden', width: 100, overflow: 'scroll'}).appendTo('body'),
            widthWithScroll = $('<div>').css({width: '100%'}).appendTo($outer).outerWidth();
            $outer.remove();
            return 100 - widthWithScroll;
        }
        else{
            return 0;
        }
    };
</script>

<%- contentFor("scripts")%>
<script type="text/javascript">
    var placedItems = <%-placedItemsJson%>;
    var notPlacedItems = <%-notPlacedItemsJson%>;
    function filterLoja(ele){
        idArea = ele.getAttribute('data-id');
        getCookie("ra_usuario")
        let url = "/api/itemUsuario/readMissingItemsSpecific"
        let form = {
            idArea: idArea,
            ra: getCookie("ra_usuario")
        }
        $.ajax({
            method: "post",
            url: url,
            data: form,
            dataType: "json",
            success: function (data) {
                console.log(data);
                let res = ""
                for(let i = 0; i < data.length; i++){
                    res+= `<li class="bcl-item" id="loja-item-${data[i].id_item}">
                    <div class="bcl-item-body">
                        <img src=${data[i].img_url_item}>
                    </div>
                    <div class="bcl-item-header">
                        <div class="bcl-title">Item ${data[i].id_item}</div>
                        <button class="mdc-icon-button material-icons" onclick="buyItem(${data[i].id_item})">monetization_on</button>
                        <div class="item-price">${data[i].preco_item}</div>
                    </div>
                </li>`
                }
                $('#loja-item-list').empty();
                $('#loja-item-list').append(res);
            },
            error: function (e) {
                console.log(e)
            }
        })

    }
    

    function buyItem(id){
        idItem = id;
        let url = "/api/itemUsuario/create"
        let form = {
            id_item: idItem,
            ra_usuario: getCookie("ra_usuario")
        }
        $.ajax({
            method: "post",
            url: url,
            data: form,
            dataType: "json",
            success: function (data) {
                console.log(data);
                $('#loja-item-'+idItem+'').closest('.bcl-item').remove();
                $('.item-box').append('<button class="item-box-item" id="item-box-item-'+id+'" onclick="adicionarItem('+id+')"></button>')
                notPlacedItems = returnNotPlacedItems(getCookie("ra_usuario"))
            },
            error: function (e) {
                console.log(e)
            }
        })
    }

    function returnNotPlacedItems(ra){
        let url = "/api/itemUsuario/readNotPlacedItems"
        let form = {
            ra: ra
        }
        $.ajax({
            method: "post",
            url: url,
            data: form,
            dataType: "json",
            success: function (data) {
                return data
            },
            error: function (e) {
                console.log(e);
            },
        })
    }

    function editarPortItem(idProjeto){
        $('.browser-content-overlay').addClass('browser-content-overlay--after');
        $('.port-item-edit-modal').addClass('port-item-edit-modal--after');
        $('#port-item-id').attr('value', idProjeto);
        let url = "/api/projeto/read"
        let form = {
            ra_usuario : getCookie("ra_usuario")
        }
        let listaProjetos = null
        $.ajax({
            method: "post",
            url: url,
            data: form,
            dataType: "json",
            success: function (data) {
                listaProjetos = data
            },
            error: function (e) {
                console.log(e)
            }
        })
        for(let i = 0; i < listaProjetos.length; i++){
            if(listaProjetos[i].id_projeto == idProjeto){
                $('#project-name').value = listaProjetos[i].nome_projeto
                $('#project-desc').value = listaProjetos[i].descricao_projeto
                $('#project-area').selected = listaProjetos[i].id_area
                $('#project-type').selected = listaProjetos[i].id_tipo_projeto
                // let dt_comeco = new Date(listaProjetos[i].dt_comeco_projeto)
                // const day = dt_comeco.getDate();
                // const month = dt_comeco.getMonth() + 1;
                // const year = dt_comeco.getFullYear();
                // dt_comeco =  `${day}/${month}/${year}`;
                // $('#datepicker').value = dt_comeco
                // let dt_termino = new Date(listaProjetos[i].dt_termino_projeto)
                // const day = dt_termino.getDate();
                // const month = dt_termino.getMonth() + 1;
                // const year = dt_termino.getFullYear();
                // dt_termino =  `${day}/${month}/${year}`;
                // $("#datepicker2").value = dt_termino
                // TERMINAR INSERÇÃO DOS DADOS DA EDIÇÃO
            }
        }
        

    }

    function closePortItem(){
        $('.browser-content-overlay').removeClass('browser-content-overlay--after');
        $('.port-item-edit-modal').removeClass('port-item-edit-modal--after');
    }

    function savePortItem(){
        var areaProjeto = $('#project-area').val();
        var tipoProjeto = $('#project-type').val();
        var nomeProjeto = $('#project-name').val();
        var descProjeto = $('#project-desc').val();
        var conclProjeto = $('#check-concluido').prop("checked") ? 1 : 0;
        var splitDate = $('#datepicker').val().split("/");
        var inicioProjeto = new Date(splitDate[2],splitDate[1] - 1, splitDate[0]).toISOString().substr(0, 10);
        console.log(inicioProjeto);
        var splitDate2 = $('#datepicker2').val().split("/");
        var fimProjeto = $('#datepicker2').val() == "" ? "Null" : new Date(splitDate2[2],splitDate2[1] - 1, splitDate2[0]).toISOString().substr(0, 10);
        var idProjeto = $('#port-item-id').val();
        var exibirProjeto = $('#check-exibir').prop("checked") ? 1 : 0;

        let url = "/api/projeto/update"
        let form = {
            ra_usuario: getCookie("ra_usuario"),
            id_projeto: idProjeto,
            id_tipo_projeto: tipoProjeto,
            nome_projeto: nomeProjeto,
            id_area: areaProjeto,
            dt_termino_projeto: fimProjeto,
            descricao_projeto: descProjeto,
            dt_comeco_projeto: inicioProjeto,
            terminado_projeto: conclProjeto,
            exibir_projeto: exibirProjeto
        }
        $.ajax({
            method: "POST",
            url: url,
            data: form,
            dataType: "json",
            success: function (data) {
                console.log(data);
                loadContent('/portifolio');
            },
            error: function (e) {
                console.log(e)
            }
        })
    }

    function deletePortItem(idProjeto){
        

        let url = "/api/projeto/delete"
        let form = {
            idProjeto: idProjeto
        }
        console.log(form);
        $.ajax({
            method: "post",
            url: url,
            data: form,
            dataType: "json",
            success: function (data) {
                console.log(data)
            },
            error: function (e) {
                console.log(e)
            }
        })
    }

    function editMode(){
        $('.item-box-wrapper').addClass('item-box-wrapper-after');
    }

    function endEditMode(){
        $('.item-box-wrapper').removeClass('item-box-wrapper-after');
    }

    function startEditMode(){
        $('.item-box-wrapper').removeClass('item-box-wrapper-after');
        if(window.objdragEditing == true){
        }
        else{
            window.objdragEditing = true;
            //durante essa operacao checar posicionamento dos itens ja colocados e dos móveis fixos, e tamanho dos itens para definir onde podem ser colocados
            $('.grid-container').append('<div class="edit-overlay"></div>');
            $('.room-container').append('<button class="room-save" onclick="saveEditMode()"></button>');
            $('#item-store-area').css('bottom',getScrollBarWidth());
        }
    }

    function saveEditMode(){
        $('.edit-overlay').remove();
        $('.room-save').remove();
        $('#item-store-area').css('bottom',-45);
        window.objdragEditing = false;
    }
    
    function getCookie(name) {
    // Split cookie string and get all individual name=value pairs in an array
    var cookieArr = document.cookie.split(";");
    console.log(cookieArr);
    // Loop through the array elements
    for(var i = 0; i < cookieArr.length; i++) {
        var cookiePair = cookieArr[i].split("=");
        
        /* Removing whitespace at the beginning of the cookie name
        and compare it with the given string */
        if(name == cookiePair[0].trim()) {
            // Decode the cookie value and return
            return decodeURIComponent(cookiePair[1]);
        }
    }
    
    // Return null if not found
    return null;
}
   

    function adicionarItem(x){
        var itemClicado;
        for(let i = 0; i < notPlacedItems.length; i++){
            if(notPlacedItems[i].id_item_usuario == x){
                itemClicado = notPlacedItems[i];
            }
        }
        var div = $(`<div class="objdrag room-object" id="item-${itemClicado.id_item_usuario}" data-id="${itemClicado.id_item_usuario}" style="position:absolute;background:url(${itemClicado.img_url_item}); width:${(itemClicado.width)*80}px; height:${(itemClicado.height)*80}px"></div>`)[0];
        var clicadoId = itemClicado.id_item_usuario;
        console.log( $("#item-box-item-"+clicadoId+""));
        $("#item-box-item-"+clicadoId+"").remove();
        div.cellX = 0;
        div.cellY = 0;
        div.cellW = itemClicado.width;
        div.cellH = itemClicado.height;
        $('.grid-container').append(div);
        
        let url = "/api/itemUsuario/placeObject"
        let form = {
            id_item_usuario: itemClicado.id_item_usuario,
            cellx: 0,
            celly: 0
        }
        $.ajax({
            method: "post",
            url: url,
            data: form,
            dataType: "json",
            success: function (data) {
                console.log(data)
                insertPlacedItem(itemClicado.id_item_usuario)
            },
            error: function (e) {
                console.log(e)
            }
        })
    }
    function removePlacedItem(itemId) {
        for(let i = 0; i < placedItems.length; i++) {
            if(placedItems[i].id_item_usuario == itemId){
                let placedIt = placedItems[i]
                placedItems.splice(i, 1)
                notPlacedItems.push(placedIt)
            }
        }
        
    }

    function insertPlacedItem(itemId) {
        for(let i = 0; i < notPlacedItems.length; i++){
            if(notPlacedItems[i].id_item_usuario == itemId){
                let notPlaced = notPlacedItems[i]
                notPlacedItems.splice(i, 1)
                placedItems.push(notPlaced)
            }
        }
      
    }

    function registroRedirect() {
        window.location.replace("/formTest")
    }
    
    function portifolioRedirect() {
        window.location.replace("/portifolio")
    }

    function resumeRedirect() {
        window.location.replace("/resume.html")
    }

    MicroModal.init({
        awaitCloseAnimation: true,
    });

    function showSidebar() {
        overlayToggle();
        var sidebar = document.querySelector('.sidebar-wrapper');
        sidebar.classList.toggle('sidebar-wrapper-after');
    }
    
    function overlayToggle() {
        $("#sidebar-overlay").fadeIn(200);
    }

    function closeOverlay() {
        $("#sidebar-overlay").fadeOut(200);
        var sidebar = document.querySelector('.sidebar-wrapper');
            sidebar.classList.remove('sidebar-wrapper-after');
    }
    
    $(document).ready(function(){
        $("#account-header-button").click(function(){
             $(".account-modal-wrapper").fadeToggle(200);
        });

        $(".desktop-icon").click(function(){
             $(".os-window-container").show(150);
        });

        $(".os-window-close").click(function(){
             $(".os-window-container").hide(150);
        });

    });
</script>